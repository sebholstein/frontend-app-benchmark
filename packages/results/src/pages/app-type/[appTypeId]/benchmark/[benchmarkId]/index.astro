---
import { RESULTS_DATA_URL } from "../../../../../api-url";
import BenchmarksNav from "../../../../../components/BenchmarksNav";
import Layout from "../../../../../layouts/Layout.astro";
import { ApplicationType } from "../../../../../models/application-type.model";

export async function getStaticPaths() {
    const typesResp = await fetch(RESULTS_DATA_URL + '/application-types.json');
    const types: ApplicationType[] = await typesResp.json();
    const r: any[] = [];

    for (const t of types) {
        t.benchmarks.forEach(b => r.push({ params: { appTypeId: t.id, benchmarkId: b.id } }))
    }
    return r
}

const typesResp = await fetch(RESULTS_DATA_URL + '/application-types.json');
const types: ApplicationType[] = await typesResp.json();
const type = types.find(t => t.id === Astro.params.appTypeId);

---

<Layout title={`${type.name} Benchmark`}>
    <BenchmarksNav appType={type} client:load />

</Layout>